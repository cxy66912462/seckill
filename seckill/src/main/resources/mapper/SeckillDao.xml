<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.cxy.seckill.dao.SeckillDao">

	<update id="reduceNumber">
	    update
          seckill
        set
          number = number - 1
        where
        seckill_id = #{seckillId}
        and start_time <![CDATA[ <= ]]> #{killTime}
        and end_time >= #{killTime}
        and number > 0;
	</update>

	<!-- 目的:为DAO接口方法提供sql语句配置-->
	<select id="queryById" resultType="Seckill" parameterType="Long" >
		select seckill_id,name,number,date_format(start_time,'%Y-%m-%e %T') as start_time ,
		date_format(end_time,'%Y-%m-%e %T') as end_time ,date_format(create_time,'%Y-%m-%e %T') as create_time
        from seckill
        <where>
        	seckill_id = #{seckillId}
        </where>
	</select>
	
	<select id="queryAll" resultType="Seckill">
		select seckill_id,name,number,date_format(start_time,'%Y-%m-%e %T') as start_time ,
		date_format(end_time,'%Y-%m-%e %T') as end_time ,date_format(create_time,'%Y-%m-%e %T') as create_time
        from seckill 
        order by create_time desc
        limit #{offest},#{limit}
	</select>
	
	<select id="queryAll2" resultType="Seckill">
		select seckill_id,name,number,start_time,end_time,create_time
        from seckill 
        order by create_time desc
	</select>

	<!-- mybatis调用存储过程 -->
    <select id="killByProcedure" statementType="CALLABLE" >
        call execute_seckill(
            #{seckillId,jdbcType=BIGINT,mode=IN},
            #{phone,jdbcType=BIGINT,mode=IN},
            #{killTime,jdbcType=TIMESTAMP,mode=IN},
            #{result,jdbcType=INTEGER,mode=OUT}
        )
    </select>
</mapper>       
        